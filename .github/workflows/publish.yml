name: Deployment

on: deployment

jobs:
  crates:
    name: Github-control CI
    runs-on: ubuntu-latest
    steps:
      - name: Update deployment status
        id: status
        uses: actions/github-script@v2
        env:
          DEPLOYMENT_ID: ${{ github.event.deployment.id }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          previews: 'ant-man,flash'
          script: |
            const name = context.payload.deployment.payload.name;
            const version = context.payload.deployment.payload.version;
            const cratesUrl = `https://crates.io/crates/github-control/${version}`;
            const { data: deploymentStatus } = github.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: process.env.DEPLOYMENT_ID,
              environment_url: cratesUrl,
              description: `Deployed github-control@${version} on crates.io`,
              auto_inactive: false,
              state: 'in_progress',
            });
            const directory = context.payload.deployment.payload.directory;
            console.log(`::set-output name=directory::${directory}`)
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.deployment.payload.ref }}

      - name: Git config
        run: |
          git config user.name "Github actions"
          git config user.email "an.griffon@gmail.com"

      - name: Install
        - uses: actions/checkout@v2
        - uses: actions-rs/toolchain@v1
          with:
            toolchain: stable

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --verbose
      - name: Publish
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CRATES_IO_API_TOKEN }}
      - name: Publish
        id: publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
      - name: Update deployment status
        if: always()
        uses: actions/github-script@v2
        env:
          DEPLOYMENT_ID: ${{ github.event.deployment.id }}
          PUBLISH_STATE: ${{ steps.publish.outputs.state }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          previews: 'ant-man,flash'
          script: |
            const name = context.payload.deployment.payload.name;
            const version = context.payload.deployment.payload.version;
            const cratesUrl = `https://crates.io/crates/github-control/${version}`;
            const state = process.env.PUBLISH_STATE === 'done' ? 'success' : 'failure';
            const { data: deploymentStatus } = github.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: process.env.DEPLOYMENT_ID,
              environment_url: cratesUrl,
              description: `Deployed github-control@${version} on crates.io`,
              auto_inactive: false,
              state,
            });

